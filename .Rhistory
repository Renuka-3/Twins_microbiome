merge(di, within_pairs, by.x=c("X","Y"), by.y=c("ID_1", "ID_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))))
#mergeddata <- rbind(AN, PN)
#mergedcities$City <- c(rep("Ahmednagar", nrow(AN)),  rep("Pune", nrow(PN)))
a2 <- ggplot(combined, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+ geom_jitter(width= 0.05, size= 1.7)+
#geom_jitter(aes(colour = grp), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("twin_pairs", "within_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = "") + scale_x_discrete(labels=c("twin_pairs" = "Twins", "within_pairs" = "Siblings")) + theme_bw(base_size = 20)
print(a2)
print(a2)
library(mia)
library(miaViz)
library(dplyr)
tse <- readRDS("sibdata/sibtwin_tse.rds")
tse <- tse[,!(colnames(tse) %in% c("T6A", "T6B", "T7A", "T7B", "T8A", "T8B", "T9A", "T9B", "T11A", "T11B", "T12A", "T12B", "T13A", "T13B"))]
tse <- subsetByPrevalentFeatures(tse,
rank = "Phylum",
prevalence = 20/100)
di <- as.matrix(vegdist(t(assay(tse, "counts")), method="bray"))
di <- reshape2::melt(di) %>% `colnames<-`(c("X","Y", "value"))
# split tse by twins and sibling
tse_list <- splitOn(tse, f= "Pair")
tse_twin <- tse_list[[1]]
tse_sib <- tse_list[[2]]
set.seed(123)
twin_pairs <- colData(tse_twin) %>% as_tibble() %>% group_by(ID) %>%
summarise(twin_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(twin_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("ID_1", "ID_2"))
set.seed(123)
within_pairs <- colData(tse_sib) %>% as_tibble() %>% group_by(ID) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("ID_1", "ID_2"))
unrel <- tse[,!(colnames(tse) %in% c("T1A", "T2A", "T3A", "T4A", "T5A", "T10A", "S1", "S3", "S5", "S7", "S9", "S11"))]
#colData(unrel)$Unr <- c("Unr1", "Unr1", "Unr2","Unr2", "Unr3", "Unr3", "Unr4","Unr4", "Unr5", "Unr5", "Unr6","Unr6")
colData(unrel)$Unr <- c("Unr1", "Unr2", "Unr3","Unr4", "Unr5", "Unr6", "Unr1","Unr2", "Unr3", "Unr4", "Unr5","Unr6")
set.seed(123)
unrel_pairs <- colData(unrel) %>% as_tibble() %>% group_by(Unr) %>%
summarise(unrel_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(unrel_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("Unr_1", "Unr_2"))
combined <- rbind(
merge(di, twin_pairs, by.x=c("X","Y"), by.y=c("ID_1", "ID_2")) %>%
mutate(grp=rep("twin_pairs",nrow(twin_pairs))),
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("ID_1", "ID_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, unrel_pairs, by.x=c("X","Y"), by.y=c("Unr_1", "Unr_2")) %>%
mutate(grp=rep("unrel_pairs",nrow(within_pairs))))
b <- ggplot(combined, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+ geom_jitter(width= 0.05, size= 1.7)+
#geom_jitter(aes(colour = grp), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("twin_pairs", "within_pairs"), c("twin_pairs", "unrel_pairs"), c("unrel_pairs","within_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = "") + scale_x_discrete(labels=c("twin_pairs" = "Twins", "within_pairs" = "Siblings", "unrel_pairs" = "Unrelated")) + theme_bw(base_size = 20)
print(b)
print(b)
library(mia)
library(miaViz)
library(dplyr)
tse <- readRDS("sibdata/sibtwin_tse.rds")
tse <- tse[,!(colnames(tse) %in% c("T6A", "T6B", "T7A", "T7B", "T8A", "T8B", "T9A", "T9B", "T11A", "T11B", "T12A", "T12B", "T13A", "T13B"))]
tse <- subsetByPrevalentFeatures(tse,
rank = "Genus",
prevalence = 20/100)
di <- as.matrix(vegdist(t(assay(tse, "counts")), method="bray"))
di <- reshape2::melt(di) %>% `colnames<-`(c("X","Y", "value"))
# split tse by twins and sibling
tse_list <- splitOn(tse, f= "Pair")
tse_twin <- tse_list[[1]]
tse_sib <- tse_list[[2]]
set.seed(123)
twin_pairs <- colData(tse_twin) %>% as_tibble() %>% group_by(ID) %>%
summarise(twin_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(twin_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("ID_1", "ID_2"))
set.seed(123)
within_pairs <- colData(tse_sib) %>% as_tibble() %>% group_by(ID) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("ID_1", "ID_2"))
unrel <- tse[,!(colnames(tse) %in% c("T1A", "T2A", "T3A", "T4A", "T5A", "T10A", "S1", "S3", "S5", "S7", "S9", "S11"))]
#colData(unrel)$Unr <- c("Unr1", "Unr1", "Unr2","Unr2", "Unr3", "Unr3", "Unr4","Unr4", "Unr5", "Unr5", "Unr6","Unr6")
colData(unrel)$Unr <- c("Unr1", "Unr2", "Unr3","Unr4", "Unr5", "Unr6", "Unr1","Unr2", "Unr3", "Unr4", "Unr5","Unr6")
set.seed(123)
unrel_pairs <- colData(unrel) %>% as_tibble() %>% group_by(Unr) %>%
summarise(unrel_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(unrel_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("Unr_1", "Unr_2"))
combined <- rbind(
merge(di, twin_pairs, by.x=c("X","Y"), by.y=c("ID_1", "ID_2")) %>%
mutate(grp=rep("twin_pairs",nrow(twin_pairs))),
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("ID_1", "ID_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, unrel_pairs, by.x=c("X","Y"), by.y=c("Unr_1", "Unr_2")) %>%
mutate(grp=rep("unrel_pairs",nrow(within_pairs))))
b <- ggplot(combined, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+ geom_jitter(width= 0.05, size= 1.7)+
#geom_jitter(aes(colour = grp), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("twin_pairs", "within_pairs"), c("twin_pairs", "unrel_pairs"), c("unrel_pairs","within_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = "") + scale_x_discrete(labels=c("twin_pairs" = "Twins", "within_pairs" = "Siblings", "unrel_pairs" = "Unrelated")) + theme_bw(base_size = 20)
print(b)
print(b)

library(mia)
library(vegan)
library(scater)
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggsignif)
library(miaViz)
tse <- readRDS("data/twins_tse.rds")
tse <- subsetByPrevalentFeatures(tse,
rank = "Phylum",
prevalence = 10/ 100)
di <- as.matrix(vegdist(t(assay(tse, "counts")), method="bray"))
di <- reshape2::melt(di) %>% `colnames<-`(c("X","Y", "value"))
#spling location-wise
tse_list <- splitOn(tse, f= "Geographical_location")
tse_Ahm <- tse_list[[1]]
tse_Pune <- tse_list[[2]]
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Ahm) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
AN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Pune <- tse_list[[2]]
set.seed(123)
within_pairs <- colData(tse_Pune) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
PN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Nashik) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
#rand <- sample(nrow(within_pairs))
pl <- rev(order(within_pairs$pair_2))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[pl])
NS <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
mergedcities <- rbind(AN, PN, NS)
mergedcities$City <- c(rep("Ahmednagar", nrow(AN)),  rep("Pune", nrow(PN)), rep("Nashik", nrow(NS)))
a <- ggplot(mergedcities, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+
geom_jitter(aes(colour = City), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("within_pairs", "between_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = " Twin pair comparison") + scale_x_discrete(labels=c("within_pairs" = "Within", "between_pairs" = "Between")) + theme_bw(base_size = 20)
print(a)
print(a)

library(mia)
library(vegan)
library(scater)
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggsignif)
library(miaViz)
tse <- readRDS("data/twins_tse.rds")
tse <- subsetByPrevalentFeatures(tse,
rank = "Phylum",
prevalence = 20/ 100)
di <- as.matrix(vegdist(t(assay(tse, "counts")), method="bray"))
di <- reshape2::melt(di) %>% `colnames<-`(c("X","Y", "value"))
#spling location-wise
tse_list <- splitOn(tse, f= "Geographical_location")
tse_Ahm <- tse_list[[1]]
tse_Pune <- tse_list[[2]]
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Ahm) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
AN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Pune <- tse_list[[2]]
set.seed(123)
within_pairs <- colData(tse_Pune) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
PN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Nashik) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
#rand <- sample(nrow(within_pairs))
pl <- rev(order(within_pairs$pair_2))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[pl])
NS <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
mergedcities <- rbind(AN, PN, NS)
mergedcities$City <- c(rep("Ahmednagar", nrow(AN)),  rep("Pune", nrow(PN)), rep("Nashik", nrow(NS)))
a <- ggplot(mergedcities, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+
geom_jitter(aes(colour = City), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("within_pairs", "between_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = " Twin pair comparison") + scale_x_discrete(labels=c("within_pairs" = "Within", "between_pairs" = "Between")) + theme_bw(base_size = 20)
print(a)
print(a)
library(mia)
library(vegan)
library(scater)
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggsignif)
library(miaViz)
tse <- readRDS("data/twins_tse.rds")
tse <- subsetByPrevalentFeatures(tse,
rank = "Genus",
prevalence = 20/ 100)
di <- as.matrix(vegdist(t(assay(tse, "counts")), method="bray"))
di <- reshape2::melt(di) %>% `colnames<-`(c("X","Y", "value"))
#spling location-wise
tse_list <- splitOn(tse, f= "Geographical_location")
tse_Ahm <- tse_list[[1]]
tse_Pune <- tse_list[[2]]
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Ahm) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
AN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Pune <- tse_list[[2]]
set.seed(123)
within_pairs <- colData(tse_Pune) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
rand <- sample(nrow(within_pairs))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[rand])
PN <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
tse_Nashik <- tse_list[[3]]
set.seed(123)
within_pairs <- colData(tse_Nashik) %>% as_tibble() %>% group_by(Pair) %>%
summarise(within_pairs=combn(Samples, 2, simplify = FALSE)) %>%
dplyr::select(within_pairs) %>% .[[1]] %>% do.call(rbind, .) %>%
as.data.frame() %>% `colnames<-`(c("pair_1", "pair_2"))
#rand <- sample(nrow(within_pairs))
pl <- rev(order(within_pairs$pair_2))
between_pairs <- data.frame(pair_1=within_pairs$pair_1, pair_2=within_pairs$pair_2[pl])
NS <- rbind(
merge(di, within_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("within_pairs",nrow(within_pairs))),
merge(di, between_pairs, by.x=c("X","Y"), by.y=c("pair_1", "pair_2")) %>%
mutate(grp=rep("between_pairs",nrow(between_pairs))))
mergedcities <- rbind(AN, PN, NS)
mergedcities$City <- c(rep("Ahmednagar", nrow(AN)),  rep("Pune", nrow(PN)), rep("Nashik", nrow(NS)))
a <- ggplot(mergedcities, aes(x=grp,y=value))+
geom_boxplot(outlier.shape = NA)+
geom_jitter(aes(colour = City), width= 0.05, size= 1.7) +
geom_signif(comparisons = list(c("within_pairs", "between_pairs")), map_signif_level = FALSE) +
theme(text = element_text(size = 10)) + labs(x = "", y= "Bray-Curtis index", title = " Twin pair comparison") + scale_x_discrete(labels=c("within_pairs" = "Within", "between_pairs" = "Between")) + theme_bw(base_size = 20)
print(a)
print(a)
#library(mia)
#library(miaViz)
#library(vegan)
#tse <- readRDS("data/fam_tse.rds")
#tse <- tse[ , tse$G %in% "G3"]
#tse1 <- tse[,!(colnames(tse) %in% c("B3", "C5", "D3", "E4", "G4", "H5", "J5", "L4", "O7"))]
#x <- as.matrix(vegdist(t(assay(tseA, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseA <- tse[,!(colnames(tse1) %in% c("F4", "F5", "I5", "I6", "K4", "K5", "M4", "M5", "N4", "N5"))]
#x <- as.matrix(vegdist(t(assay(tseA, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseF <- tse[,!(colnames(tse1) %in% c("A4", "A5", "I5", "I6", "K4", "K5", "M4", "M5", "N4", "N5"))]
#x <- as.matrix(vegdist(t(assay(tseF, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseI <- tse[,!(colnames(tse1) %in% c("A4", "A5", "F5", "F6", "K4", "K5", "M4", "M5", "N4", "N5"))]
#x <- as.matrix(vegdist(t(assay(tseI, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseK <- tse[,!(colnames(tse1) %in% c("A4", "A5", "F5", "F6", "I4", "I5", "M4", "M5", "N4", "N5"))]
#x <- as.matrix(vegdist(t(assay(tseK, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseM <- tse[,!(colnames(tse1) %in% c("A4", "A5", "F5", "F6", "I4", "I5", "K4", "K5", "N4", "N5"))]
#x <- as.matrix(vegdist(t(assay(tseM, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
#tseN <- tse[,!(colnames(tse1) %in% c("A4", "A5", "F5", "F6", "I4", "I5", "K4", "K5", "M4", "M5"))]
#x <- as.matrix(vegdist(t(assay(tseN, "counts")), method="bray"))
#average_dissimilarity <- mean(x)
#percentage_similarity <- 100 - (average_dissimilarity * 100)
#percentage_similarity
library(mia)
install.packages("BiocManager")
BiocManager::install(mia)
BiocManager::install("mia")
library(mia)
library(miaViz)
BiocManager::install("miaViz")
library(miaViz)
library(vegan)
tse <- readRDS("sibdata/sibtwin_tse.rds")
tse <- tse[ , tse$Pair %in% "Sibling"]
tseS1 <- tse[,!(colnames(tse) %in% c("S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS1, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
library(mia)
library(miaViz)
library(vegan)
tse <- readRDS("sibdata/sibtwin_tse.rds")
tse <- tse[ , tse$Pair %in% "Sibling"]
tseS1 <- tse[,!(colnames(tse) %in% c("S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS1, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseS2 <- tse[,!(colnames(tse) %in% c("S1", "S2", "S5", "S6", "S7", "S8", "S9", "S10", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS2, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseS3 <- tse[,!(colnames(tse) %in% c("S1", "S2", "S3", "S4", "S7", "S8", "S9", "S10", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS3, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseS4 <- tse[,!(colnames(tse) %in% c("S1", "S2", "S3", "S4", "S5", "S6", "S9", "S10", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS4, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseS5 <- tse[,!(colnames(tse) %in% c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S11", "S12"))]
x <- as.matrix(vegdist(t(assay(tseS5, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseS6 <- tse[,!(colnames(tse) %in% c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8", "S9", "S10"))]
x <- as.matrix(vegdist(t(assay(tseS6, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
library(mia)
library(miaViz)
library(vegan)
tse <- readRDS("sibdata/sibtwin_tse.rds")
tse <- tse[ , tse$Pair %in% "Twin"]
tseT1 <- tse[,(colnames(tse) %in% c("T1A", "T1B"))]
x <- as.matrix(vegdist(t(assay(tseT1, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT2 <- tse[,(colnames(tse) %in% c("T2A", "T2B"))]
x <- as.matrix(vegdist(t(assay(tseT2, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT3 <- tse[,(colnames(tse) %in% c("T3A", "T3B"))]
x <- as.matrix(vegdist(t(assay(tseT3, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT4 <- tse[,(colnames(tse) %in% c("T4A", "T4B"))]
x <- as.matrix(vegdist(t(assay(tseT4, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT5 <- tse[,(colnames(tse) %in% c("T5A", "T5B"))]
x <- as.matrix(vegdist(t(assay(tseT5, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT6 <- tse[,(colnames(tse) %in% c("T6A", "T6B"))]
x <- as.matrix(vegdist(t(assay(tseT6, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT7 <- tse[,(colnames(tse) %in% c("T7A", "T7B"))]
x <- as.matrix(vegdist(t(assay(tseT7, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT8 <- tse[,(colnames(tse) %in% c("T8A", "T8B"))]
x <- as.matrix(vegdist(t(assay(tseT8, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT9 <- tse[,(colnames(tse) %in% c("T9A", "T9B"))]
x <- as.matrix(vegdist(t(assay(tseT9, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT10 <- tse[,(colnames(tse) %in% c("T10A", "T10B"))]
x <- as.matrix(vegdist(t(assay(tseT10, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT11 <- tse[,(colnames(tse) %in% c("T11A", "T11B"))]
x <- as.matrix(vegdist(t(assay(tseT11, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT12 <- tse[,(colnames(tse) %in% c("T12A", "T12B"))]
x <- as.matrix(vegdist(t(assay(tseT12, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
tseT13 <- tse[,(colnames(tse) %in% c("T13A", "T13B"))]
x <- as.matrix(vegdist(t(assay(tseT13, "counts")), method="bray"))
average_dissimilarity <- mean(x)
percentage_similarity <- 100 - (average_dissimilarity * 100)
percentage_similarity
library("mia")
library(ggplot2)
library(patchwork)
library(ggsignif)
library(ggpubr)
tse <- readRDS("data/twins_tse.rds")
#Alpha diversity measures
tse <- mia::estimateDiversity(tse,
assay_name = "counts",
index = "shannon",
name = "shannon")
head(colData(tse)$shannon)
df <- as.data.frame(colData(tse))
a <- ggplot(df, aes(x = Diet, y = shannon)) +    ## Shannon Diversity for Diet
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
labs(y= "Shannon index", x= "", title = "A. Diet") + theme_bw() + theme(text = element_text(size = 13), axis.text = element_text(size = 10), axis.title = element_text(size = 12)) + geom_bracket(xmin = "Mixed", xmax= "Vegetarian", y.position = 2.2,label = "0.40") #+ geom_signif(comparisons = list(c("Mixed", "Vegetarian")), map_signif_level = FALSE, na.rm = TRUE)
b <- ggplot(df, aes(x = Gender, y = shannon)) +    ## Shannon Diversity for Gender
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
labs(y= "Shannon index", x= "", title = "B. Gender") + theme_bw() + theme(text = element_text(size = 13), axis.text = element_text(size = 10), axis.title = element_text(size = 12)) + geom_bracket(xmin = "Female", xmax= "Male", y.position = 2.2,label = "0.95") #+ geom_signif(comparisons = list(c("Male", "Female")), map_signif_level = FALSE, na.rm = TRUE)
c <- ggplot(df, aes(x = Geographical_location, y = shannon)) +    ## Shannon Diversity for location
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
labs(y= "Shannon index", x= "", title = "C. Geographical location") + theme_bw() + theme(text = element_text(size = 13), axis.text = element_text(size = 10), axis.title = element_text(size = 12)) + geom_signif(comparisons = list(c("Ahmednagar", "Pune"), c("Pune","Nashik"), c("Nashik", "Ahmednagar")), map_signif_level = FALSE, na.rm = TRUE)
## Multiple pairwise comparison for all co-factors
m <- c()
l <- df
m[["Diet"]] <- kruskal.test(data = l, shannon ~ factor(Diet))$p.value
m[["Geographical_location"]] <- kruskal.test(data = l, shannon ~ factor(Geographical_location))$p.value
m[["Gender"]] <- kruskal.test(data = l, shannon ~ factor(Gender))$p.value
p.adjust(m, method="fdr")
library(grid)
library(gridExtra)
gridExtra::grid.arrange(a, b, c, ncol = 3)
d <- ggplot(df, aes(x = Pair, y = shannon)) +    ## Shannon Diversity for twin pair (between)
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.05) +
labs(y= "Shannon index", x= "", title = "Twin-pair diversity") + theme_bw() + theme(text = element_text(size = 13), axis.text = element_text(size = 10), axis.title = element_text(size = 12)) + geom_signif(comparisons = list(c("Twin1", "Twin2"), c("Twin1", "Twin9"), c("Twin3", "Twin4")), map_signif_level = FALSE, na.rm = TRUE)
print(d)
## anosim
df <- as.data.frame(colData(tse))
library(vegan)
df <- as.data.frame(colData(tse))
s <- anosim(df$shannon, df$Pair, permutations = 999)
summary(s)
plot(s)
